Course.create!(
  dept: "cmpt",
  number: "105w",
  term: "summer",
  year: "2023",
  title: "Social Issues and Communication Strategies in Computing Science",
  description: "This course teaches the fundamentals of informative and persuasive communication for professional engineers and computer scientists. A principal goal of this course is to assist students in thinking critically about various contemporary technical, social, and ethical issues. It focuses on communicating technical information clearly and concisely, managing issues of persuasion when communicating with diverse audiences, presentation skills, and teamwork.",
  requisite_description: "",
  prereq_logic:"", # implement
  short_description: "This course teaches the fundamentals of informative and persuasive communication for professional engineers and computer scientists. A principal goal of this course is to assist students in thinking critically about various contemporary technical, social, and ethical issues. It focuses on communicating technical information clearly and concisely, managing issues of persuasion when communicating with diverse audiences, presentation skills, and teamwork.",
  credits: 3,
  instructors: [],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "120",
  term: "summer",
  year: "2023",
  title: "Introduction to Computing Science and Programming I",
  description: "An elementary introduction to computing science and computer programming, suitable for students with little or no programming background. Students will learn fundamental concepts and terminology of computing science, acquire elementary skills for programming in a high-level language, e.g. Python. The students will be exposed to diverse fields within, and applications of computing science. Topics will include: pseudocode; data types and control structures; fundamental algorithms; recursion; reading and writing files; measuring performance of algorithms; debugging tools; basic terminal navigation using shell commands. Treatment is informal and programming is presented as a problem-solving tool. ",
  requisite_description: "BC Math 12 or equivalent is recommended.",
  prereq_logic:"", # implement
  short_description: "An elementary introduction to computing science and computer programming, suitable for students with little or no programming background. Students will learn fundamental concepts and terminology of computing science, acquire elementary skills for programming in a high-level language, e.g. Python. The students will be exposed to diverse fields within, and applications of computing science. Topics will include: pseudocode; data types and control structures; fundamental algorithms; recursion; reading and writing files; measuring performance of algorithms; debugging tools; basic terminal navigation using shell commands. Treatment is informal and programming is presented as a problem-solving tool. ",
  credits: 3,
  instructors: ["Hazra Imran"],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "125",
  term: "summer",
  year: "2023",
  title: "Introduction to Computing Science and Programming II",
  description: "A rigorous introduction to computing science and computer programming, suitable for students who already have some background in computing science and programming.  Intended for students who will major in computing science or a related program. Topics include: memory management; fundamental algorithms; formally analyzing the running time of algorithms; abstract data types and elementary data structures; object-oriented programming and software design; specification and program correctness; reading and writing files; debugging tools; shell commands.",
  requisite_description: "CMPT 120 or CMPT 130, with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "A rigorous introduction to computing science and computer programming, suitable for students who already have some background in computing science and programming.  Intended for students who will major in computing science or a related program. Topics include: memory management; fundamental algorithms; formally analyzing the running time of algorithms; abstract data types and elementary data structures; object-oriented programming and software design; specification and program correctness; reading and writing files; debugging tools; shell commands.",
  credits: 3,
  instructors: ["Janice Regan"],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "210",
  term: "summer",
  year: "2023",
  title: "Probability and Computing",
  description: "Probability has become an essential tool in modern computer science with applications in randomized algorithms, computer vision and graphics, systems, data analysis, and machine learning. The course introduces the foundational concepts in probability as required by many modern applications in computing.",
  requisite_description: "MACM 101, MATH 152, and MATH 240, all with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "Probability has become an essential tool in modern computer science with applications in randomized algorithms, computer vision and graphics, systems, data analysis, and machine learning. The course introduces the foundational concepts in probability as required by many modern applications in computing.",
  credits: 3,
  instructors: ["Brad Bart"],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "225",
  term: "summer",
  year: "2023",
  title: "Data Structures and Programming",
  description: "Introduction to a variety of practical and important data structures and methods for implementation and for experimental and analytical evaluation. Topics include: stacks, queues and lists; search trees; hash tables and algorithms; efficient sorting; object-oriented programming; time and space efficiency analysis; and experimental evaluation. ",
  requisite_description: "(MACM 101 and (CMPT 125, CMPT 129 or CMPT 135)) or (ENSC 251 and ENSC 252), all with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "Introduction to a variety of practical and important data structures and methods for implementation and for experimental and analytical evaluation. Topics include: stacks, queues and lists; search trees; hash tables and algorithms; efficient sorting; object-oriented programming; time and space efficiency analysis; and experimental evaluation. ",
  credits: 3,
  instructors: ["Toby Donaldson", "John Edgar"],
  campuses: ["Burnaby", "Surrey"],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "276",
  term: "summer",
  year: "2023",
  title: "Introduction to Software Engineering",
  description: "An overview of various techniques used for software development and software project management. Major tasks and phases in modern software development, including requirements, analysis, documentation, design, implementation, testing,and maintenance. Project management issues are also introduced. Students complete a team project using an iterative development process.",
  requisite_description: "One W course, CMPT 225, (MACM 101 or (ENSC 251 and ENSC 252)) and (MATH 151 or MATH 150), all with a minimum grade of C-. MATH 154 or MATH 157 with at least a B+ may be substituted for MATH 151 or MATH 150.",
  prereq_logic:"", # implement
  short_description: "An overview of various techniques used for software development and software project management. Major tasks and phases in modern software development, including requirements, analysis, documentation, design, implementation, testing,and maintenance. Project management issues are also introduced. Students complete a team project using an iterative development process.",
  credits: 3,
  instructors: ["Tao Wang", "Bobby Chan"],
  campuses: ["Burnaby", "Surrey"],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "295",
  term: "summer",
  year: "2023",
  title: "Introduction to Computer Systems",
  description: "The curriculum introduces students to topics in computer architecture that are considered fundamental to an understanding of the digital systems underpinnings of computer systems. ",
  requisite_description: "Either (MACM 101 and (CMPT 125 or CMPT 135)) or (MATH 151 and CMPT 102 for students in an Applied Physics program), all with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "The curriculum introduces students to topics in computer architecture that are considered fundamental to an understanding of the digital systems underpinnings of computer systems. ",
  credits: 3,
  instructors: ["Arrvindh Shriraman", "Gregory Baker"],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "300",
  term: "summer",
  year: "2023",
  title: "Operating Systems I",
  description: "This course aims to give the student an understanding of what a modern operating system is, and the services it provides. It also discusses some basic issues in operating systems and provides solutions. Topics include multiprogramming, process management, memory management, and file systems.",
  requisite_description: "CMPT 225 and (CMPT 295 or ENSC 254), all with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "This course aims to give the student an understanding of what a modern operating system is, and the services it provides. It also discusses some basic issues in operating systems and provides solutions. Topics include multiprogramming, process management, memory management, and file systems.",
  credits: 3,
  instructors: ["Hazra Imran"],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "307",
  term: "summer",
  year: "2023",
  title: "Data Structures and Algorithms",
  description: "Design and analysis of efficient data structures and algorithms. General techniques for building and analyzing algorithms (greedy, divide & conquer, dynamic programming, network flows). Introduction to NP-completeness.",
  requisite_description: "CMPT 225, (MACM 201 or CMPT 210), (MATH 150 or MATH 151), and (MATH 232 or MATH 240), all with a minimum grade of C-. MATH 154 or MATH 157 with a grade of at least B+ may be substituted for MATH 150 or MATH 151.",
  prereq_logic:"", # implement
  short_description: "Design and analysis of efficient data structures and algorithms. General techniques for building and analyzing algorithms (greedy, divide & conquer, dynamic programming, network flows). Introduction to NP-completeness.",
  credits: 3,
  instructors: ["Valentine Kabanets"],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "310",
  term: "summer",
  year: "2023",
  title: "Introduction to Artificial Intelligence",
  description: "A survey of modern approaches for artificial intelligence (AI). Provides an introduction to a variety of AI topics and prepares students for upper-level courses. Topics include: problem solving with search; adversarial game playing; probability and Bayesian networks; machine learning; and applications such as robotics, visual computing and natural language.",
  requisite_description: "CMPT 225 and (MACM 101 or (ENSC 251 and ENSC 252)), all with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "A survey of modern approaches for artificial intelligence (AI). Provides an introduction to a variety of AI topics and prepares students for upper-level courses. Topics include: problem solving with search; adversarial game playing; probability and Bayesian networks; machine learning; and applications such as robotics, visual computing and natural language.",
  credits: 3,
  instructors: [],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "353",
  term: "summer",
  year: "2023",
  title: "Computational Data Science",
  description: "Basic concepts and programming tools for handling and processing data. Includes data acquisition, cleaning data sources, application of machine learning techniques and data analysis techniques, large-scale computation on a computing cluster.",
  requisite_description: "CMPT 225 and (STAT 101, STAT 270, STAT 271, ENSC 280, or MSE 210), with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "Basic concepts and programming tools for handling and processing data. Includes data acquisition, cleaning data sources, application of machine learning techniques and data analysis techniques, large-scale computation on a computing cluster.",
  credits: 3,
  instructors: ["Gregory Baker"],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "354",
  term: "summer",
  year: "2023",
  title: "Database Systems I",
  description: "Logical representations of data records. Data models. Studies of some popular file and database systems. Document retrieval. Other related issues such as database administration, data dictionary and security.",
  requisite_description: "CMPT 225 and (MACM 101 or (ENSC 251 and ENSC 252)), all with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "Logical representations of data records. Data models. Studies of some popular file and database systems. Document retrieval. Other related issues such as database administration, data dictionary and security.",
  credits: 3,
  instructors: [],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "361",
  term: "summer",
  year: "2023",
  title: "Introduction to Computer Graphics",
  description: "This course provides an introduction to the fundamentals of computer graphics. Topics include graphics display and interaction hardware, basic algorithms for 2D primitives, anti-aliasing, 2D and 3D geometrical transformations, 3D projections/viewing, Polygonal and hierarchical models, hidden-surface removal, basic rendering techniques (color, shading, raytracing, radiosity), and interaction techniques.",
  requisite_description: "CMPT 225 and MATH 232 or 240, all with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "This course provides an introduction to the fundamentals of computer graphics. Topics include graphics display and interaction hardware, basic algorithms for 2D primitives, anti-aliasing, 2D and 3D geometrical transformations, 3D projections/viewing, Polygonal and hierarchical models, hidden-surface removal, basic rendering techniques (color, shading, raytracing, radiosity), and interaction techniques.",
  credits: 3,
  instructors: ["KangKang Yin"],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "363",
  term: "summer",
  year: "2023",
  title: "User Interface Design",
  description: "This course provides a comprehensive study of user interface design. Topics include: goals and principles of UI design (systems engineering and human factors), historical perspective, current paradigms (widget-based, mental model, graphic design, ergonomics, metaphor, constructivist/iterative approach, and visual languages) and their evaluation, existing tools and packages (dialogue models, event-based systems, prototyping), future paradigms, and the social impact of UI.",
  requisite_description: "CMPT 225 with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "This course provides a comprehensive study of user interface design. Topics include: goals and principles of UI design (systems engineering and human factors), historical perspective, current paradigms (widget-based, mental model, graphic design, ergonomics, metaphor, constructivist/iterative approach, and visual languages) and their evaluation, existing tools and packages (dialogue models, event-based systems, prototyping), future paradigms, and the social impact of UI.",
  credits: 3,
  instructors: ["Victor Cheung"],
  campuses: ["Surrey"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "371",
  term: "summer",
  year: "2023",
  title: "Data Communications and Networking",
  description: "Data communication fundamentals (data types, rates, and transmission media). Network architectures for local and wide areas. Communications protocols suitable for various architectures. ISO protocols and internetworking. Performance analysis under various loadings and channel error rates.",
  requisite_description: "CMPT 225 and (MATH 151 or MATH 150), with a minimum grade of C-. MATH 154 or MATH 157 with a grade of at least B+ may be substituted for MATH 151 (MATH 150).",
  prereq_logic:"", # implement
  short_description: "Data communication fundamentals (data types, rates, and transmission media). Network architectures for local and wide areas. Communications protocols suitable for various architectures. ISO protocols and internetworking. Performance analysis under various loadings and channel error rates.",
  credits: 3,
  instructors: [],
  campuses: ["Surrey"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "372",
  term: "summer",
  year: "2023",
  title: "Web II - Server-side Development",
  description: "Introduces students to the fundamentals of server-side web development. Students will gain experience working with backend web frameworks, designing and implementing web APIs, and deploying web systems. Students will be introduced to popular back-end frameworks. The course will focus on the design, creating, implementation, and deployment of backend systems, including APIs.",
  requisite_description: "CMPT 272 and CMPT 225, both with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "Introduces students to the fundamentals of server-side web development. Students will gain experience working with backend web frameworks, designing and implementing web APIs, and deploying web systems. Students will be introduced to popular back-end frameworks. The course will focus on the design, creating, implementation, and deployment of backend systems, including APIs.",
  credits: 3,
  instructors: ["Bobby Chan"],
  campuses: ["Surrey"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "376w",
  term: "summer",
  year: "2023",
  title: "Professional Responsibility and Technical Writing",
  description: "Covers professional writing in computing science, including format conventions and technical reports. The basis for ethical decision-making and the methodology for reaching ethical decisions concerning computing matters will be studied. Students will survey and write research papers, and both individual and group work will be emphasized.",
  requisite_description: "CMPT 105W and (CMPT 275 or CMPT 276), with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "Covers professional writing in computing science, including format conventions and technical reports. The basis for ethical decision-making and the methodology for reaching ethical decisions concerning computing matters will be studied. Students will survey and write research papers, and both individual and group work will be emphasized.",
  credits: 3,
  instructors: ["Harinder Khangura"],
  campuses: ["Surrey"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "379",
  term: "summer",
  year: "2023",
  title: "Principles of Compiler Design",
  description: "This course covers the key components of a compiler for a high level programming language. Topics include lexical analysis, parsing, type checking, code generation and optimization. Students will work in teams to design and implement an actual compiler making use of tools such as lex and yacc. ",
  requisite_description: "(MACM 201 or CMPT 210), (CMPT 295 or ENSC 215) and CMPT 225, all with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "This course covers the key components of a compiler for a high level programming language. Topics include lexical analysis, parsing, type checking, code generation and optimization. Students will work in teams to design and implement an actual compiler making use of tools such as lex and yacc. ",
  credits: 3,
  instructors: ["Thomas Shermer"],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "383",
  term: "summer",
  year: "2023",
  title: "Comparative Programming Languages",
  description: "Various concepts and principles underlying the design and use of modern programming languages are considered in the context of procedural, object-oriented, functional and logic programming languages. Topics include data and control structuring constructs, facilities for modularity and data abstraction, polymorphism, syntax, and formal semantics.",
  requisite_description: "CMPT 225 and (MACM 101 or (ENSC 251 and ENSC 252)), all with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "Various concepts and principles underlying the design and use of modern programming languages are considered in the context of procedural, object-oriented, functional and logic programming languages. Topics include data and control structuring constructs, facilities for modularity and data abstraction, polymorphism, syntax, and formal semantics.",
  credits: 3,
  instructors: ["Gregory Baker"],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "403",
  term: "summer",
  year: "2023",
  title: "System Security and Privacy",
  description: "Starting from cybersecurity principles, students will learn to protect systems from attacks on data confidentiality, integrity, system availability, and user privacy. By modeling system security, students will learn to find weaknesses in software, hardware, networks, data storage systems, and the Internet, and identify current security practices to protect these systems.",
  requisite_description: "CMPT 300 with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "Starting from cybersecurity principles, students will learn to protect systems from attacks on data confidentiality, integrity, system availability, and user privacy. By modeling system security, students will learn to find weaknesses in software, hardware, networks, data storage systems, and the Internet, and identify current security practices to protect these systems.",
  credits: 3,
  instructors: [],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "407",
  term: "summer",
  year: "2023",
  title: "Computational Complexity",
  description: "Study of what is, and is not, efficiently computable with limited resources (time, space, randomness, parallelism, nondeterminism, interaction, and quantum). Complexity classes and connections among them. Interplay between complexity and algorithm design.",
  requisite_description: "CMPT 307 with a minimum grade of C-. CMPT 308 is recommended.",
  prereq_logic:"", # implement
  short_description: "Study of what is, and is not, efficiently computable with limited resources (time, space, randomness, parallelism, nondeterminism, interaction, and quantum). Complexity classes and connections among them. Interplay between complexity and algorithm design.",
  credits: 3,
  instructors: ["Valentine Kabanets"],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "415",
  term: "summer",
  year: "2023",
  title: "Special Research Projects",
  description: "To be individually arranged.",
  requisite_description: "Permission of Instructor and School.",
  prereq_logic:"", # implement
  short_description: "To be individually arranged.",
  credits: 3,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200", "d300", "d400", "d500", "d600", "d700", "d800", "d900"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "416",
  term: "summer",
  year: "2023",
  title: "Special Research Projects",
  description: "To be individually arranged.",
  requisite_description: "Permission of the department.",
  prereq_logic:"", # implement
  short_description: "To be individually arranged.",
  credits: 3,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200", "d300"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "419",
  term: "summer",
  year: "2023",
  title: "Special Topics in Artificial Intelligence",
  description: "Current topics in artificial intelligence depending on faculty and student interest.",
  requisite_description: "",
  prereq_logic:"", # implement
  short_description: "Current topics in artificial intelligence depending on faculty and student interest.",
  credits: 3,
  instructors: ["Anoop Sarkar"],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "426",
  term: "summer",
  year: "2023",
  title: "Practicum I",
  description: "First term of work experience in the School of Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  requisite_description: "Students must complete Bridging Online (visit www.sfu.ca/coop/bol for further details) at least two terms before their anticipated co-op placement. Students must then enroll with the co-op program by the second week of the term preceding the work term. Normally, students will have completed a minimum of 45 units by the end of the term of application, CMPT 275 or 276, and have a minimum CGPA of 2.50.",
  prereq_logic:"", # implement
  short_description: "First term of work experience in the School of Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  credits: 3,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200", "d300", "d400", "i100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "427",
  term: "summer",
  year: "2023",
  title: "Practicum II",
  description: "The second term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  requisite_description: "CMPT 426, CGPA of 2.50.",
  prereq_logic:"", # implement
  short_description: "The second term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  credits: 3,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200", "d300", "d400", "i100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "428",
  term: "summer",
  year: "2023",
  title: "Practicum III",
  description: "The third term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  requisite_description: "CMPT 427, CGPA of 2.50.",
  prereq_logic:"", # implement
  short_description: "The third term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  credits: 3,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200", "d300", "d400", "i100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "429",
  term: "summer",
  year: "2023",
  title: "Practicum IV",
  description: "The fourth term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  requisite_description: "CMPT 428, CGPA of 2.50.",
  prereq_logic:"", # implement
  short_description: "The fourth term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  credits: 3,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200", "d300", "d400", "i100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "430",
  term: "summer",
  year: "2023",
  title: "Practicum V",
  description: "An optional fifth term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. This course may be repeated for credit at most twice. Repeating for credit requires approval of the School. Graded as pass/fail (P/F).",
  requisite_description: "CMPT 429, CGPA of 2.50.",
  prereq_logic:"", # implement
  short_description: "An optional fifth term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. This course may be repeated for credit at most twice. Repeating for credit requires approval of the School. Graded as pass/fail (P/F).",
  credits: 3,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200", "d300", "d400", "i100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "454",
  term: "summer",
  year: "2023",
  title: "Database Systems II",
  description: "An advanced course on database systems which covers crash recovery, concurrency control, transaction processing, distributed database systems as the core material and a set of selected topics based on the new developments and research interests, such as object-oriented data models and systems, extended relational systems, deductive database systems, and security and integrity.",
  requisite_description: "CMPT 300 and 354, with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "An advanced course on database systems which covers crash recovery, concurrency control, transaction processing, distributed database systems as the core material and a set of selected topics based on the new developments and research interests, such as object-oriented data models and systems, extended relational systems, deductive database systems, and security and integrity.",
  credits: 3,
  instructors: ["John Edgar"],
  campuses: ["Surrey"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "469",
  term: "summer",
  year: "2023",
  title: "Special Topics in Computer Graphics",
  description: "Current topics in computer graphics depending on faculty and student interest.",
  requisite_description: "CMPT 361 with a minimum grade of C-.",
  prereq_logic:"", # implement
  short_description: "Current topics in computer graphics depending on faculty and student interest.",
  credits: 3,
  instructors: ["Victor Cheung"],
  campuses: ["Surrey"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "475",
  term: "summer",
  year: "2023",
  title: "Requirements Engineering",
  description: "Software succeeds when it is well-matched to its intended purpose. Requirements engineering is the process of discovering that purpose by making requirements explicit and documenting them in a form amenable to analysis, reasoning, and validation, establishing the key attributes of a system prior to its construction. Students will learn methodical approaches to requirements analysis and design specification in early systems development phases, along with best practices and common principles to cope with notoriously changing requirements. ",
  requisite_description: "CMPT 275 or CMPT 276, (MACM 201 or CMPT 210) , all with a minimum grade of C- and 15 units of upper division courses. Recommended: Co-op experience.",
  prereq_logic:"", # implement
  short_description: "Software succeeds when it is well-matched to its intended purpose. Requirements engineering is the process of discovering that purpose by making requirements explicit and documenting them in a form amenable to analysis, reasoning, and validation, establishing the key attributes of a system prior to its construction. Students will learn methodical approaches to requirements analysis and design specification in early systems development phases, along with best practices and common principles to cope with notoriously changing requirements. ",
  credits: 3,
  instructors: [],
  campuses: ["Burnaby"],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "493",
  term: "summer",
  year: "2023",
  title: "Digital Media Practicum",
  description: "The design and implementation of interactive digital media systems using modern processes and tools. Projects are provided by external clients or vetted entrepreneurial pitches and are developed by interdisciplinary teams composed of one CMPT 493 student and multiple Master of Digital Media students.",
  requisite_description: "CMPT 275 or CMPT 276, at least 80 units, CGPA and UDGPA over 3.0, enrolled in any CS major program. Participation in the practicum is competitive and an application must be submitted to the Undergraduate Chair by a defined due date announced each term.",
  prereq_logic:"", # implement
  short_description: "The design and implementation of interactive digital media systems using modern processes and tools. Projects are provided by external clients or vetted entrepreneurial pitches and are developed by interdisciplinary teams composed of one CMPT 493 student and multiple Master of Digital Media students.",
  credits: 6,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "494",
  term: "summer",
  year: "2023",
  title: "Software Systems Program Capstone Project I",
  description: "This course is the first in a series of two 3 unit courses for the Software Systems Capstone Project. Students will work in teams on a closely supervised software systems project. Projects can be research based or have a significant software application, potentially based on a real customer application specification, as their basis. Students will be required to write a full project report and present their project during the Capstone Project Day Presentations.",
  requisite_description: "Students must have completed at least 15 units of upper division CMPT courses. Successful Capstone Project Proposal.",
  prereq_logic:"", # implement
  short_description: "This course is the first in a series of two 3 unit courses for the Software Systems Capstone Project. Students will work in teams on a closely supervised software systems project. Projects can be research based or have a significant software application, potentially based on a real customer application specification, as their basis. Students will be required to write a full project report and present their project during the Capstone Project Day Presentations.",
  credits: 3,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200", "d300"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "495",
  term: "summer",
  year: "2023",
  title: "Software Systems Capstone Project II",
  description: "This course is the second in a series of two 3 unit courses for the Software Systems Capstone Project. Students will work in teams or a closely supervised software systems project. Projects can be research based or have a significant software application, potentially based on a real customer specification. Students will be required to write a final project report at the end of the term and do a project presentation during the Capstone Presentation Day.",
  requisite_description: "CMPT 494 with a minimum grade of C-. CMPT 495 must be taken in the term immediately following the successful completion of CMPT 494 and must be for the same project and faculty supervisor.",
  prereq_logic:"", # implement
  short_description: "This course is the second in a series of two 3 unit courses for the Software Systems Capstone Project. Students will work in teams or a closely supervised software systems project. Projects can be research based or have a significant software application, potentially based on a real customer specification. Students will be required to write a final project report at the end of the term and do a project presentation during the Capstone Presentation Day.",
  credits: 3,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200", "d300"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "496",
  term: "summer",
  year: "2023",
  title: "Directed Studies",
  description: "Independent study in topics selected in consultation with the supervising instructor(s) that are not covered by existing course offerings. Students must submit a proposal to the undergraduate chair, including the name and signature of the supervising faculty member(s). The proposal must include details of the material to be covered and the work to be submitted.",
  requisite_description: "Students must have completed 90 units, including 15 units of upper division CMPT courses, and have a GPA of at least 3.00. The proposal must be submitted to the undergraduate chair at least 15 days in advance of the term. The proposal must be signed by the supervisor(s) and the undergraduate chair.",
  prereq_logic:"", # implement
  short_description: "Independent study in topics selected in consultation with the supervising instructor(s) that are not covered by existing course offerings. Students must submit a proposal to the undergraduate chair, including the name and signature of the supervising faculty member(s). The proposal must include details of the material to be covered and the work to be submitted.",
  credits: 3,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "497",
  term: "summer",
  year: "2023",
  title: "Dual Degree Program Capstone Project",
  description: "Students will select one project to be completed in their final year of study. Each student must complete a project report and make a project presentation. The project may include: a research survey, a project implementation, a research paper/report. ",
  requisite_description: "Submission of a satisfactory capstone project proposal.",
  prereq_logic:"", # implement
  short_description: "Students will select one project to be completed in their final year of study. Each student must complete a project report and make a project presentation. The project may include: a research survey, a project implementation, a research paper/report. ",
  credits: 6,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100"],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "498",
  term: "summer",
  year: "2023",
  title: "Honours Research Project",
  description: "Students must submit a proposal to the Undergraduate Chair, including the name and signature of the supervising faculty member(s). Students must complete a project report and make a project presentation. This course can satisfy the research project requirements for Computing Science honours students.",
  requisite_description: "Students must have completed 90 units, including 15 units of upper division CMPT courses, and have a GPA of at least 3.00. The proposal must be submitted to the Undergraduate Chair at least 15 days in advance of the term. The proposal must be signed by the supervisor(s) and the undergraduate chair.",
  prereq_logic:"", # implement
  short_description: "Students must submit a proposal to the Undergraduate Chair, including the name and signature of the supervising faculty member(s). Students must complete a project report and make a project presentation. This course can satisfy the research project requirements for Computing Science honours students.",
  credits: 6,
  instructors: [],
  campuses: [nil],
  delivery_methods: ["In Person"],
  sections: ["d100", "d200", "d300"],
  requisites: [],
)
