Course.create!(
  dept: "cmpt",
  number: "105w",
  term: "fall",
  year: "2022",
  title: "Social Issues and Communication Strategies in Computing Science",
  description: "This course teaches the fundamentals of informative and persuasive communication for professional engineers and computer scientists. A principal goal of this course is to assist students in thinking critically about various contemporary technical, social, and ethical issues. It focuses on communicating technical information clearly and concisely, managing issues of persuasion when communicating with diverse audiences, presentation skills, and teamwork.",
  requisite_description: "",
  prereq_logic: "", # implement
  short_description: "This course teaches the fundamentals of informative and persuasive communication for professional engineers and computer scientists. A principal goal of this course is to assist students in thinking critically about various contemporary technical, social, and ethical issues. It focuses on communicating technical information clearly and concisely, managing issues of persuasion when communicating with diverse audiences, presentation skills, and teamwork.",
  credits: 3,
  instructors: [ "Harinder Khangura", "Cristina Eftenaru" ],
  campuses: [ "Surrey", "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "e100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "120",
  term: "fall",
  year: "2020",
  title: "Introduction to Computing Science and Programming I",
  description: "An elementary introduction to computing science and computer programming, suitable for students with little or no programming background. Students will learn fundamental concepts and terminology of computing science, acquire elementary skills for programming in a high-level language, e.g. Python. The students will be exposed to diverse fields within, and applications of computing science. Topics will include: pseudocode; data types and control structures; fundamental algorithms; recursion; reading and writing files; measuring performance of algorithms; debugging tools; basic terminal navigation using shell commands. Treatment is informal and programming is presented as a problem-solving tool. ",
  requisite_description: "BC Math 12 or equivalent is recommended.",
  prereq_logic: "", # implement
  short_description: "An elementary introduction to computing science and computer programming, suitable for students with little or no programming background. Students will learn fundamental concepts and terminology of computing science, acquire elementary skills for programming in a high-level language, e.g. Python. The students will be exposed to diverse fields within, and applications of computing science. Topics will include: pseudocode; data types and control structures; fundamental algorithms; recursion; reading and writing files; measuring performance of algorithms; debugging tools; basic terminal navigation using shell commands. Treatment is informal and programming is presented as a problem-solving tool. ",
  credits: 3,
  instructors: [ "Toby Donaldson", "Nicholas Vincent", "Brian Fraser" ],
  campuses: [ "Burnaby", "Surrey" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d300", "d400" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "125",
  term: "fall",
  year: "2018",
  title: "Introduction to Computing Science and Programming II",
  description: "A rigorous introduction to computing science and computer programming, suitable for students who already have some background in computing science and programming.  Intended for students who will major in computing science or a related program. Topics include: memory management; fundamental algorithms; formally analyzing the running time of algorithms; abstract data types and elementary data structures; object-oriented programming and software design; specification and program correctness; reading and writing files; debugging tools; shell commands.",
  requisite_description: "CMPT 120 or CMPT 130, with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "A rigorous introduction to computing science and computer programming, suitable for students who already have some background in computing science and programming.  Intended for students who will major in computing science or a related program. Topics include: memory management; fundamental algorithms; formally analyzing the running time of algorithms; abstract data types and elementary data structures; object-oriented programming and software design; specification and program correctness; reading and writing files; debugging tools; shell commands.",
  credits: 3,
  instructors: [ "Victor Cheung" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "e100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "130",
  term: "fall",
  year: "2024",
  title: "Introduction to Computer Programming I",
  description: "An introduction to computing science and computer programming, using a systems oriented language, such as C or C++. This course introduces basic computing science concepts. Topics will include: elementary data types, control structures, functions, arrays and strings, fundamental algorithms, computer organization and memory management.",
  requisite_description: "BC Math 12 (or equivalent, or any of MATH 100, 150, 151, 154, or 157, with a minimum grade of C-).",
  prereq_logic: "", # implement
  short_description: "An introduction to computing science and computer programming, using a systems oriented language, such as C or C++. This course introduces basic computing science concepts. Topics will include: elementary data types, control structures, functions, arrays and strings, fundamental algorithms, computer organization and memory management.",
  credits: 3,
  instructors: [ "Brian Fraser" ],
  campuses: [ "Surrey" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "201",
  term: "fall",
  year: "2024",
  title: "Systems Programming",
  description: "An introduction to a UNIX-like application-OS interface from a programmer's perspective. Introduces operating systems and their interfaces for user-level programs. Students learn how to programmatically interact with an OS efficiently, correctly, and securely. Topics include: command-line tools, programming with memory, processes, threads, IPC, as well as basics of OS security.",
  requisite_description: "(CMPT 125 or CMPT 135) and MACM 101, both with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "An introduction to a UNIX-like application-OS interface from a programmer's perspective. Introduces operating systems and their interfaces for user-level programs. Students learn how to programmatically interact with an OS efficiently, correctly, and securely. Topics include: command-line tools, programming with memory, processes, threads, IPC, as well as basics of OS security.",
  credits: 4,
  instructors: [ "Steven Ko" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "210",
  term: "fall",
  year: "2024",
  title: "Probability and Computing",
  description: "Probability has become an essential tool in modern computer science with applications in randomized algorithms, computer vision and graphics, systems, data analysis, and machine learning. The course introduces the foundational concepts in probability as required by many modern applications in computing.",
  requisite_description: "MACM 101, MATH 152, CMPT 125 or CMPT 135, and (MATH 240 or MATH 232), all with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Probability has become an essential tool in modern computer science with applications in randomized algorithms, computer vision and graphics, systems, data analysis, and machine learning. The course introduces the foundational concepts in probability as required by many modern applications in computing.",
  credits: 3,
  instructors: [ "Sharan Vaswani" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "213",
  term: "fall",
  year: "2015",
  title: "Object Oriented Design in Java",
  description: "An introduction to object oriented design using Java. The Java programming language is introduced,

with an emphasis on its advanced features. The course covers the building blocks of object oriented

design including inheritance, polymorphism, interfaces and abstract classes. A number of object oriented design patterns are presented, such as observer, iterator, and singleton. The course also teaches best-practices in code construction. It includes a basic introduction to programming event driven graphical user interfaces.",
  requisite_description: "CMPT 225 with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "An introduction to object oriented design using Java. The Java programming language is introduced,

with an emphasis on its advanced features. The course covers the building blocks of object oriented

design including inheritance, polymorphism, interfaces and abstract classes. A number of object oriented design patterns are presented, such as observer, iterator, and singleton. The course also teaches best-practices in code construction. It includes a basic introduction to programming event driven graphical user interfaces.",
  credits: 3,
  instructors: [ "Brian Fraser" ],
  campuses: [ "Surrey" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "225",
  term: "fall",
  year: "2024",
  title: "Data Structures and Programming",
  description: "Introduction to a variety of practical and important data structures and methods for implementation and for experimental and analytical evaluation. Topics include: stacks, queues and lists; search trees; hash tables and algorithms; efficient sorting; object-oriented programming; time and space efficiency analysis; and experimental evaluation. ",
  requisite_description: "(MACM 101 and (CMPT 125, CMPT 129 or CMPT 135)) or (ENSC 251 and ENSC 252), all with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Introduction to a variety of practical and important data structures and methods for implementation and for experimental and analytical evaluation. Topics include: stacks, queues and lists; search trees; hash tables and algorithms; efficient sorting; object-oriented programming; time and space efficiency analysis; and experimental evaluation. ",
  credits: 3,
  instructors: [ "John Edgar", "David Chou" ],
  campuses: [ "Burnaby", "Surrey" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "263",
  term: "fall",
  year: "2024",
  title: "Introduction to Human-Centered Computing",
  description: "Surveys contemporary Human-Computer Interaction (HCI) topics on designing, implementing, and evaluating interactive computer systems from a human-centered perspective. Students will learn important concepts including understanding users, incorporating accountability and responsibility in design, creating accessible and inclusive systems, and evaluating system interfaces with well-established methodologies.",
  requisite_description: "CMPT 125 or CMPT 135, with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Surveys contemporary Human-Computer Interaction (HCI) topics on designing, implementing, and evaluating interactive computer systems from a human-centered perspective. Students will learn important concepts including understanding users, incorporating accountability and responsibility in design, creating accessible and inclusive systems, and evaluating system interfaces with well-established methodologies.",
  credits: 3,
  instructors: [ "Victor Cheung" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "272",
  term: "fall",
  year: "2024",
  title: "Web I - Client-side Development",
  description: "Introduces students to the fundamentals of client-side web programming. Students will gain experience working with markup languages such as HTML and CSS as well as define dynamic behaviour using JavaScript and TypeScript. Students will be introduced to popular front-end frameworks. The web architecture will be discussed, and web services will be invoked using basic API calls to existing REST APIs.",
  requisite_description: "CMPT 120 or CMPT 130 or CMPT 128, with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Introduces students to the fundamentals of client-side web programming. Students will gain experience working with markup languages such as HTML and CSS as well as define dynamic behaviour using JavaScript and TypeScript. Students will be introduced to popular front-end frameworks. The web architecture will be discussed, and web services will be invoked using basic API calls to existing REST APIs.",
  credits: 3,
  instructors: [ "Shervin Shirmohammadi" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "e100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "276",
  term: "fall",
  year: "2024",
  title: "Introduction to Software Engineering",
  description: "An overview of various techniques used for software development and software project management. Major tasks and phases in modern software development, including requirements, analysis, documentation, design, implementation, testing,and maintenance. Project management issues are also introduced. Students complete a team project using an iterative development process.",
  requisite_description: "One W course, CMPT 225, (MACM 101 or (ENSC 251 and ENSC 252)) and (MATH 151 or MATH 150), all with a minimum grade of C-. MATH 154 or MATH 157 with at least a B+ may be substituted for MATH 151 or MATH 150.",
  prereq_logic: "", # implement
  short_description: "An overview of various techniques used for software development and software project management. Major tasks and phases in modern software development, including requirements, analysis, documentation, design, implementation, testing,and maintenance. Project management issues are also introduced. Students complete a team project using an iterative development process.",
  credits: 3,
  instructors: [ "Saba Alimadadi Jani", "Parsa Rajabi", "Steve Pearce", "Herbert Tsang" ],
  campuses: [ "Burnaby", "Surrey" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200", "d300", "d400" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "295",
  term: "fall",
  year: "2024",
  title: "Introduction to Computer Systems",
  description: "The curriculum introduces students to topics in computer architecture that are considered fundamental to an understanding of the digital systems underpinnings of computer systems. ",
  requisite_description: "Either (MACM 101 and (CMPT 125 or CMPT 135)) or (MATH 151 and CMPT 102 for students in an Applied Physics program), all with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "The curriculum introduces students to topics in computer architecture that are considered fundamental to an understanding of the digital systems underpinnings of computer systems. ",
  credits: 4,
  instructors: [ "Arrvindh Shriraman" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "307",
  term: "fall",
  year: "2024",
  title: "Data Structures and Algorithms",
  description: "Design and analysis of efficient data structures and algorithms. General techniques for building and analyzing algorithms (greedy, divide & conquer, dynamic programming, network flows). Introduction to NP-completeness.",
  requisite_description: "CMPT 225, (MACM 201 or CMPT 210), (MATH 150 or MATH 151), and (MATH 232 or MATH 240), all with a minimum grade of C-. MATH 154 or MATH 157 with a grade of at least B+ may be substituted for MATH 150 or MATH 151.",
  prereq_logic: "", # implement
  short_description: "Design and analysis of efficient data structures and algorithms. General techniques for building and analyzing algorithms (greedy, divide & conquer, dynamic programming, network flows). Introduction to NP-completeness.",
  credits: 3,
  instructors: [ "Andrei Bulatov", "David Mitchell" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "310",
  term: "fall",
  year: "2024",
  title: "Introduction to Artificial Intelligence",
  description: "A survey of modern approaches for artificial intelligence (AI). Provides an introduction to a variety of AI topics and prepares students for upper-level courses. Topics include: problem solving with search; adversarial game playing; probability and Bayesian networks; machine learning; and applications such as robotics, visual computing and natural language.",
  requisite_description: "CMPT 225 and (MACM 101 or (ENSC 251 and ENSC 252)), all with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "A survey of modern approaches for artificial intelligence (AI). Provides an introduction to a variety of AI topics and prepares students for upper-level courses. Topics include: problem solving with search; adversarial game playing; probability and Bayesian networks; machine learning; and applications such as robotics, visual computing and natural language.",
  credits: 3,
  instructors: [ "Angelica Lim", "Ahmadreza Nezami" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "318",
  term: "fall",
  year: "2024",
  title: "Special Topics in Computing Science",
  description: "Special topics in computing science at the 300 level. Topics that are of current interest or are not covered in regular curriculum will be offered from time to time depending on availability of faculty and student interest.",
  requisite_description: "CMPT 225 with a minimum grade of C-. Additional prerequisites to be determined by the instructor subject to approval by the undergraduate program chair.",
  prereq_logic: "", # implement
  short_description: "Special topics in computing science at the 300 level. Topics that are of current interest or are not covered in regular curriculum will be offered from time to time depending on availability of faculty and student interest.",
  credits: 3,
  instructors: [ "Uwe Glaesser" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "340",
  term: "fall",
  year: "2024",
  title: "Biomedical Computing",
  description: "no description available",
  requisite_description: "no prerequisite",
  prereq_logic: "", # implement
  short_description: "no short description",
  credits: nil,
  instructors: [],
  campuses: [],
  delivery_methods: [],
  sections: [],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "353",
  term: "fall",
  year: "2024",
  title: "Computational Data Science",
  description: "Basic concepts and programming tools for handling and processing data. Includes data acquisition, cleaning data sources, application of machine learning techniques and data analysis techniques, large-scale computation on a computing cluster.",
  requisite_description: "CMPT 225 and (BUS 232, STAT 201, STAT 203, STAT 205, STAT 270, STAT 271, ENSC 280, MSE 210, or SEE 241), with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Basic concepts and programming tools for handling and processing data. Includes data acquisition, cleaning data sources, application of machine learning techniques and data analysis techniques, large-scale computation on a computing cluster.",
  credits: 3,
  instructors: [ "Gregory Baker" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "354",
  term: "fall",
  year: "2024",
  title: "Database Systems I",
  description: "Logical representations of data records. Data models. Studies of some popular file and database systems. Document retrieval. Other related issues such as database administration, data dictionary and security.",
  requisite_description: "CMPT 225 and (MACM 101 or (ENSC 251 and ENSC 252)), all with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Logical representations of data records. Data models. Studies of some popular file and database systems. Document retrieval. Other related issues such as database administration, data dictionary and security.",
  credits: 3,
  instructors: [ "Martin Ester" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "e100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "361",
  term: "fall",
  year: "2024",
  title: "Introduction to Visual Computing",
  description: "Provides a unified introduction to the fundamentals of computer graphics and computer vision (visual computing). Topics include graphics pipelines, sampling and aliasing, geometric transformations, projection and camera models, meshing, texturing, color theory, image filtering and registration, shading and illumination, raytracing, rasterization, animation, optical flow, and game engines.",
  requisite_description: "CMPT 225 and MATH 232 or 240, all with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Provides a unified introduction to the fundamentals of computer graphics and computer vision (visual computing). Topics include graphics pipelines, sampling and aliasing, geometric transformations, projection and camera models, meshing, texturing, color theory, image filtering and registration, shading and illumination, raytracing, rasterization, animation, optical flow, and game engines.",
  credits: 3,
  instructors: [ "Xue Bin Jason Peng", "Yagiz Aksoy" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "362",
  term: "fall",
  year: "2024",
  title: "Mobile Applications Programming and Design",
  description: "Teaches students how to design and implement smartphone applications. Topics include development environment, phone emulator, key programming paradigms, UI design including views, fragments, and activities, data persistence, threads, services, embedded sensors, and location based services (e.g., Google Maps). Concepts are reinforced through programming assignments and group projects.",
  requisite_description: "CMPT 225 with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Teaches students how to design and implement smartphone applications. Topics include development environment, phone emulator, key programming paradigms, UI design including views, fragments, and activities, data persistence, threads, services, embedded sensors, and location based services (e.g., Google Maps). Concepts are reinforced through programming assignments and group projects.",
  credits: 3,
  instructors: [ "Xingdong Yang" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "365",
  term: "fall",
  year: "2024",
  title: "Multimedia Systems",
  description: "Multimedia systems design, multimedia hardware and software, issues in effectively representing, processing, and retrieving multimedia data such as text, graphics, sound and music, image and video.",
  requisite_description: "CMPT 225 with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Multimedia systems design, multimedia hardware and software, issues in effectively representing, processing, and retrieving multimedia data such as text, graphics, sound and music, image and video.",
  credits: 3,
  instructors: [ "Jiangchuan Liu" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "e100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "371",
  term: "fall",
  year: "2024",
  title: "Data Communications and Networking",
  description: "Data communication fundamentals (data types, rates, and transmission media). Network architectures for local and wide areas. Communications protocols suitable for various architectures. ISO protocols and internetworking. Performance analysis under various loadings and channel error rates.",
  requisite_description: "CMPT 225 and (MATH 151 or MATH 150), with a minimum grade of C-. MATH 154 or MATH 157 with a grade of at least B+ may be substituted for MATH 151 (MATH 150).",
  prereq_logic: "", # implement
  short_description: "Data communication fundamentals (data types, rates, and transmission media). Network architectures for local and wide areas. Communications protocols suitable for various architectures. ISO protocols and internetworking. Performance analysis under various loadings and channel error rates.",
  credits: 3,
  instructors: [ "Ouldooz Baghban Karimi" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "373",
  term: "fall",
  year: "2024",
  title: "Software Development Methods",
  description: "Survey of modern software development methodology. Several software development process models will be examined, as will the general principles behind such models. Provides experience with different programming paradigms and their advantages and disadvantages during software development.",
  requisite_description: "CMPT 276 or 275, with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Survey of modern software development methodology. Several software development process models will be examined, as will the general principles behind such models. Provides experience with different programming paradigms and their advantages and disadvantages during software development.",
  credits: 3,
  instructors: [ "William Sumner" ],
  campuses: [ "Surrey" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "376w",
  term: "fall",
  year: "2024",
  title: "Professional Responsibility and Technical Writing",
  description: "Covers professional writing in computing science, including format conventions and technical reports. The basis for ethical decision-making and the methodology for reaching ethical decisions concerning computing matters will be studied. Students will survey and write research papers, and both individual and group work will be emphasized.",
  requisite_description: "CMPT 105W and (CMPT 275 or CMPT 276), with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Covers professional writing in computing science, including format conventions and technical reports. The basis for ethical decision-making and the methodology for reaching ethical decisions concerning computing matters will be studied. Students will survey and write research papers, and both individual and group work will be emphasized.",
  credits: 3,
  instructors: [ "Angelica Lim", "Felix Lo" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "e100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "383",
  term: "fall",
  year: "2024",
  title: "Comparative Programming Languages",
  description: "Various concepts and principles underlying the design and use of modern programming languages are considered in the context of procedural, object-oriented, functional and logic programming languages. Topics include data and control structuring constructs, facilities for modularity and data abstraction, polymorphism, syntax, and formal semantics.",
  requisite_description: "CMPT 225 and (MACM 101 or (ENSC 251 and ENSC 252)), all with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Various concepts and principles underlying the design and use of modern programming languages are considered in the context of procedural, object-oriented, functional and logic programming languages. Topics include data and control structuring constructs, facilities for modularity and data abstraction, polymorphism, syntax, and formal semantics.",
  credits: 3,
  instructors: [ "Anders Miltner" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "405",
  term: "fall",
  year: "2024",
  title: "Design and Analysis of Computing Algorithms",
  description: "Models of computation, methods of algorithm design; complexity of algorithms; algorithms on graphs, NP-completeness, approximation algorithms, selected topics.",
  requisite_description: "CMPT 307 with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Models of computation, methods of algorithm design; complexity of algorithms; algorithms on graphs, NP-completeness, approximation algorithms, selected topics.",
  credits: 3,
  instructors: [ "Qianping Gu" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "409",
  term: "fall",
  year: "2024",
  title: "Special Topics in Theoretical Computing Science",
  description: "Current topics in theoretical computing science depending on faculty and student interest.",
  requisite_description: "CMPT 307 with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Current topics in theoretical computing science depending on faculty and student interest.",
  credits: 3,
  instructors: [ "Sharan Vaswani" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "410",
  term: "fall",
  year: "2024",
  title: "Machine Learning",
  description: "Machine Learning (ML) is the study of computer algorithms that improve automatically through experience. This course introduces students to the theory and practice of machine learning, and covers mathematical foundations, models such as (generalized) linear models, kernel methods and neural networks, loss functions for classification and regression, and optimization methods.",
  requisite_description: "CMPT 310 and MACM 316, both with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Machine Learning (ML) is the study of computer algorithms that improve automatically through experience. This course introduces students to the theory and practice of machine learning, and covers mathematical foundations, models such as (generalized) linear models, kernel methods and neural networks, loss functions for classification and regression, and optimization methods.",
  credits: 3,
  instructors: [ "Steven Bergner" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "412",
  term: "fall",
  year: "2024",
  title: "Computer Vision",
  description: "Computational approaches to image and video understanding in relation to theories, the operation of the human visual system, and practical application areas such as robotics. Topics include image classification, object detection, image segmentation based mostly on deep neural network and to some extent classical techniques, and 3D reconstruction. Also covers state-of-the-art deep neural architectures for computer vision applications, such as metric learning, generative adversarial networks, and recurrent neural networks.",
  requisite_description: "CMPT 361 and MATH 152, both with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Computational approaches to image and video understanding in relation to theories, the operation of the human visual system, and practical application areas such as robotics. Topics include image classification, object detection, image segmentation based mostly on deep neural network and to some extent classical techniques, and 3D reconstruction. Also covers state-of-the-art deep neural architectures for computer vision applications, such as metric learning, generative adversarial networks, and recurrent neural networks.",
  credits: 3,
  instructors: [ "Yagiz Aksoy" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "415",
  term: "fall",
  year: "2024",
  title: "Special Research Projects",
  description: "To be individually arranged.",
  requisite_description: "Permission of Instructor and School.",
  prereq_logic: "", # implement
  short_description: "To be individually arranged.",
  credits: 3,
  instructors: [ "Nicholas Vincent", "Mo Chen", "Anders Miltner", "Brian Fraser", "Parmit Kaur Chilana", "Steven Ko", "Bobby Chan", "Martin Ester", "Ouldooz Baghban Karimi" ],
  campuses: [ nil ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200", "d300", "d400", "d500", "d600", "d700", "d800", "d900" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "416",
  term: "fall",
  year: "2024",
  title: "Special Research Projects",
  description: "To be individually arranged.",
  requisite_description: "Permission of the department.",
  prereq_logic: "", # implement
  short_description: "To be individually arranged.",
  credits: 3,
  instructors: [ "Parmit Kaur Chilana", "Ouldooz Baghban Karimi", "Lawrence Kim", "Gregory Baker", "Ke Li", "Martin Ester" ],
  campuses: [ nil ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200", "d300", "d400", "d500", "d600", "d700" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "417",
  term: "fall",
  year: "2024",
  title: "Intelligent Systems",
  description: "Intelligent Systems using modern constraint programming and heuristic search methods. A survey of this rapidly advancing technology as applied to scheduling, planning, design and configuration. An introduction to constraint programming, heuristic search, constructive (backtrack) search, iterative improvement (local) search, mixed-initiative systems and combinatorial optimization.",
  requisite_description: "CMPT 225 with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Intelligent Systems using modern constraint programming and heuristic search methods. A survey of this rapidly advancing technology as applied to scheduling, planning, design and configuration. An introduction to constraint programming, heuristic search, constructive (backtrack) search, iterative improvement (local) search, mixed-initiative systems and combinatorial optimization.",
  credits: 3,
  instructors: [ "Hang Ma" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "426",
  term: "fall",
  year: "2024",
  title: "Practicum I",
  description: "First term of work experience in the School of Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  requisite_description: "Students must complete Bridging Online (visit www.sfu.ca/coop/bol for further details) at least two terms before their anticipated co-op placement. Students must then enroll with the co-op program by the second week of the term preceding the work term. Normally, students will have completed a minimum of 45 units by the end of the term of application, CMPT 275 or 276, and have a minimum CGPA of 2.50.",
  prereq_logic: "", # implement
  short_description: "First term of work experience in the School of Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  credits: 3,
  instructors: [ "Tanya Behrisch", "Cristina Eftenaru", "Stephanie Greaves" ],
  campuses: [ nil ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200", "d300", "d400", "i100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "427",
  term: "fall",
  year: "2024",
  title: "Practicum II",
  description: "The second term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  requisite_description: "CMPT 426, CGPA of 2.50.",
  prereq_logic: "", # implement
  short_description: "The second term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  credits: 3,
  instructors: [ "Tanya Behrisch", "Cristina Eftenaru", "Stephanie Greaves" ],
  campuses: [ nil ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200", "d300", "d400", "i100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "428",
  term: "fall",
  year: "2024",
  title: "Practicum III",
  description: "The third term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  requisite_description: "CMPT 427, CGPA of 2.50.",
  prereq_logic: "", # implement
  short_description: "The third term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  credits: 3,
  instructors: [ "Tanya Behrisch", "Cristina Eftenaru", "Stephanie Greaves" ],
  campuses: [ nil ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200", "d300", "d400", "i100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "429",
  term: "fall",
  year: "2024",
  title: "Practicum IV",
  description: "The fourth term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  requisite_description: "CMPT 428, CGPA of 2.50.",
  prereq_logic: "", # implement
  short_description: "The fourth term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. Graded as pass/fail (P/F).",
  credits: 3,
  instructors: [ "Tanya Behrisch", "Cristina Eftenaru", "Stephanie Greaves" ],
  campuses: [ nil ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200", "d300", "d400", "i100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "430",
  term: "fall",
  year: "2024",
  title: "Practicum V",
  description: "An optional fifth term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. This course may be repeated for credit at most twice. Repeating for credit requires approval of the School. Graded as pass/fail (P/F).",
  requisite_description: "CMPT 429, CGPA of 2.50.",
  prereq_logic: "", # implement
  short_description: "An optional fifth term of work experience for students in the Computing Science Co-operative Education Program. Units from this course do not count towards the units required for an SFU degree. This course may be repeated for credit at most twice. Repeating for credit requires approval of the School. Graded as pass/fail (P/F).",
  credits: 3,
  instructors: [ "Tanya Behrisch", "Cristina Eftenaru", "Stephanie Greaves" ],
  campuses: [ nil ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200", "d300", "d400", "i100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "431",
  term: "fall",
  year: "2024",
  title: "Distributed Systems",
  description: "An introduction to distributed systems: systems consisting of multiple physical components connected over a network. Architectures of such systems, ranging from client-server to peer-to-peer. Distributed systems are analyzed via case studies of real network file systems, replicated systems, sensor networks and peer-to-peer systems. Hands-on experience designing and implementing a complex distributed system.",
  requisite_description: "CMPT 300, 371, both with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "An introduction to distributed systems: systems consisting of multiple physical components connected over a network. Architectures of such systems, ranging from client-server to peer-to-peer. Distributed systems are analyzed via case studies of real network file systems, replicated systems, sensor networks and peer-to-peer systems. Hands-on experience designing and implementing a complex distributed system.",
  credits: 3,
  instructors: [ "Alaa Alameldeen" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "441",
  term: "fall",
  year: "2024",
  title: "Computational Biology",
  description: "This course introduces students to the computing science principles underlying computational biology. The emphasis is on the design, analysis and implementation of computational techniques. Possible topics include algorithms for sequence alignment, database searching, gene finding, phylogeny and structure analysis. ",
  requisite_description: "CMPT 307 with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "This course introduces students to the computing science principles underlying computational biology. The emphasis is on the design, analysis and implementation of computational techniques. Possible topics include algorithms for sequence alignment, database searching, gene finding, phylogeny and structure analysis. ",
  credits: 3,
  instructors: [ "Kay C Wiese" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "450",
  term: "fall",
  year: "2024",
  title: "Computer Architecture",
  description: "Principles of the architecture of computing systems. Topics include: superscalar processor micro-architecture, speculative execution, cache and memory hierarchy, multiprocessors, cache coherence, memory consistency, implications of technology on architecture, parallel architectures (multi-threading, GPUs, vector processors).",
  requisite_description: "CMPT 295 with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Principles of the architecture of computing systems. Topics include: superscalar processor micro-architecture, speculative execution, cache and memory hierarchy, multiprocessors, cache coherence, memory consistency, implications of technology on architecture, parallel architectures (multi-threading, GPUs, vector processors).",
  credits: 3,
  instructors: [ "Alaa Alameldeen", "Arrvindh Shriraman" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "454",
  term: "fall",
  year: "2024",
  title: "Database Systems II",
  description: "An advanced course on database systems which covers crash recovery, concurrency control, transaction processing, distributed database systems as the core material and a set of selected topics based on the new developments and research interests, such as object-oriented data models and systems, extended relational systems, deductive database systems, and security and integrity.",
  requisite_description: "CMPT 300 and 354, with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "An advanced course on database systems which covers crash recovery, concurrency control, transaction processing, distributed database systems as the core material and a set of selected topics based on the new developments and research interests, such as object-oriented data models and systems, extended relational systems, deductive database systems, and security and integrity.",
  credits: 3,
  instructors: [ "Ke Wang" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "e100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "459",
  term: "fall",
  year: "2024",
  title: "Special Topics in Database Systems",
  description: "Current topics in database and information systems depending on faculty and student interest.",
  requisite_description: "CMPT 354 with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Current topics in database and information systems depending on faculty and student interest.",
  credits: 3,
  instructors: [ "Martin Ester" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "464",
  term: "fall",
  year: "2024",
  title: "Geometric Modelling in Computer Graphics",
  description: "Covers advanced topics in geometric modelling and processing for computer graphics, such as Bezier and B-spline techniques, subdivision curves and surfaces, solid modelling, implicit representation, surface reconstruction, multi-resolution modelling, digital geometry processing (e.g. mesh smoothing, compression, and parameterization), point-based representation, and procedural modelling.",
  requisite_description: "CMPT 361, MACM 316, both with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Covers advanced topics in geometric modelling and processing for computer graphics, such as Bezier and B-spline techniques, subdivision curves and surfaces, solid modelling, implicit representation, surface reconstruction, multi-resolution modelling, digital geometry processing (e.g. mesh smoothing, compression, and parameterization), point-based representation, and procedural modelling.",
  credits: 3,
  instructors: [ "Richard Zhang" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "469",
  term: "fall",
  year: "2024",
  title: "Special Topics in Computer Graphics",
  description: "Current topics in computer graphics depending on faculty and student interest.",
  requisite_description: "CMPT 361 with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Current topics in computer graphics depending on faculty and student interest.",
  credits: 3,
  instructors: [ "Xingdong Yang" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "473",
  term: "fall",
  year: "2024",
  title: "Software Testing, Reliability and Security",
  description: "Methods for software quality assurance focusing on reliability and security. Test coverage and test data adequacy including combinatorial testing. MC/DC testing, and mutation testing. Security engineering techniques for vulnerability discovery and mitigation including fuzz testing. Testing techniques will be applied to the assessment of external open source software.",
  requisite_description: "(CMPT 275 or CMPT 276) with a minimum grade of C- and 15 upper division CMPT units.",
  prereq_logic: "", # implement
  short_description: "Methods for software quality assurance focusing on reliability and security. Test coverage and test data adequacy including combinatorial testing. MC/DC testing, and mutation testing. Security engineering techniques for vulnerability discovery and mitigation including fuzz testing. Testing techniques will be applied to the assessment of external open source software.",
  credits: 3,
  instructors: [ "William Sumner" ],
  campuses: [ "Surrey" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "475",
  term: "fall",
  year: "2024",
  title: "Requirements Engineering",
  description: "Software succeeds when it is well-matched to its intended purpose. Requirements engineering is the process of discovering that purpose by making requirements explicit and documenting them in a form amenable to analysis, reasoning, and validation, establishing the key attributes of a system prior to its construction. Students will learn methodical approaches to requirements analysis and design specification in early systems development phases, along with best practices and common principles to cope with notoriously changing requirements. ",
  requisite_description: "CMPT 275 or CMPT 276, (MACM 201 or CMPT 210) , all with a minimum grade of C- and 15 units of upper division courses. Recommended: Co-op experience.",
  prereq_logic: "", # implement
  short_description: "Software succeeds when it is well-matched to its intended purpose. Requirements engineering is the process of discovering that purpose by making requirements explicit and documenting them in a form amenable to analysis, reasoning, and validation, establishing the key attributes of a system prior to its construction. Students will learn methodical approaches to requirements analysis and design specification in early systems development phases, along with best practices and common principles to cope with notoriously changing requirements. ",
  credits: 3,
  instructors: [ "Dan Ridinger" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "e100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "477",
  term: "fall",
  year: "2024",
  title: "Introduction to Formal Verification",
  description: "Introduces, at an accessible level, a formal framework for symbolic model checking, one of the most important verification methods. The techniques are illustrated with examples of verification of reactive systems and communication protocols. Students learn to work with a model checking tool.",
  requisite_description: "CMPT 275 or 276, with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Introduces, at an accessible level, a formal framework for symbolic model checking, one of the most important verification methods. The techniques are illustrated with examples of verification of reactive systems and communication protocols. Students learn to work with a model checking tool.",
  credits: 3,
  instructors: [ "Yuepeng Wang" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "479",
  term: "fall",
  year: "2024",
  title: "Special Topics in Computing Systems",
  description: "Current topics in computing systems depending on faculty and student interest.",
  requisite_description: "CMPT 300 with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Current topics in computing systems depending on faculty and student interest.",
  credits: 3,
  instructors: [ "Saba Alimadadi Jani", "Deepak Rout" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200", "d300" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "489",
  term: "fall",
  year: "2024",
  title: "Special Topics in Programming Languages",
  description: "Current topics in programming languages depending on faculty and student interest.",
  requisite_description: "CMPT 383 with a minimum grade of C-.",
  prereq_logic: "", # implement
  short_description: "Current topics in programming languages depending on faculty and student interest.",
  credits: 3,
  instructors: [ "Yuepeng Wang" ],
  campuses: [ "Burnaby" ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "494",
  term: "fall",
  year: "2024",
  title: "Software Systems Program Capstone Project I",
  description: "This course is the first in a series of two 3 unit courses for the Software Systems Capstone Project. Students will work in teams on a closely supervised software systems project. Projects can be research based or have a significant software application, potentially based on a real customer application specification, as their basis. Students will be required to write a full project report and present their project during the Capstone Project Day Presentations.",
  requisite_description: "Students must have completed at least 15 units of upper division CMPT courses. Successful Capstone Project Proposal.",
  prereq_logic: "", # implement
  short_description: "This course is the first in a series of two 3 unit courses for the Software Systems Capstone Project. Students will work in teams on a closely supervised software systems project. Projects can be research based or have a significant software application, potentially based on a real customer application specification, as their basis. Students will be required to write a full project report and present their project during the Capstone Project Day Presentations.",
  credits: 3,
  instructors: [ "Keval Vora", "William Sumner", "Steven Ko" ],
  campuses: [ nil ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200", "d300" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "495",
  term: "fall",
  year: "2024",
  title: "Software Systems Capstone Project II",
  description: "This course is the second in a series of two 3 unit courses for the Software Systems Capstone Project. Students will work in teams or a closely supervised software systems project. Projects can be research based or have a significant software application, potentially based on a real customer specification. Students will be required to write a final project report at the end of the term and do a project presentation during the Capstone Presentation Day.",
  requisite_description: "CMPT 494 with a minimum grade of C-. CMPT 495 must be taken in the term immediately following the successful completion of CMPT 494 and must be for the same project and faculty supervisor.",
  prereq_logic: "", # implement
  short_description: "This course is the second in a series of two 3 unit courses for the Software Systems Capstone Project. Students will work in teams or a closely supervised software systems project. Projects can be research based or have a significant software application, potentially based on a real customer specification. Students will be required to write a final project report at the end of the term and do a project presentation during the Capstone Presentation Day.",
  credits: 3,
  instructors: [ "Keval Vora", "William Sumner", "Ke Li" ],
  campuses: [ nil ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200", "d300" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "496",
  term: "fall",
  year: "2024",
  title: "Directed Studies",
  description: "Independent study in topics selected in consultation with the supervising instructor(s) that are not covered by existing course offerings. Students must submit a proposal to the undergraduate chair, including the name and signature of the supervising faculty member(s). The proposal must include details of the material to be covered and the work to be submitted.",
  requisite_description: "Students must have completed 90 units, including 15 units of upper division CMPT courses, and have a GPA of at least 3.00. The proposal must be submitted to the undergraduate chair at least 15 days in advance of the term. The proposal must be signed by the supervisor(s) and the undergraduate chair.",
  prereq_logic: "", # implement
  short_description: "Independent study in topics selected in consultation with the supervising instructor(s) that are not covered by existing course offerings. Students must submit a proposal to the undergraduate chair, including the name and signature of the supervising faculty member(s). The proposal must include details of the material to be covered and the work to be submitted.",
  credits: 3,
  instructors: [],
  campuses: [ nil ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "497",
  term: "fall",
  year: "2024",
  title: "Dual Degree Program Capstone Project",
  description: "Students will select one project to be completed in their final year of study. Each student must complete a project report and make a project presentation. The project may include: a research survey, a project implementation, a research paper/report. ",
  requisite_description: "Submission of a satisfactory capstone project proposal.",
  prereq_logic: "", # implement
  short_description: "Students will select one project to be completed in their final year of study. Each student must complete a project report and make a project presentation. The project may include: a research survey, a project implementation, a research paper/report. ",
  credits: 6,
  instructors: [],
  campuses: [],
  delivery_methods: [ "In Person" ],
  sections: [ "d100" ],
  requisites: [],
)
Course.create!(
  dept: "cmpt",
  number: "498",
  term: "fall",
  year: "2024",
  title: "Honours Research Project",
  description: "Students must submit a proposal to the Undergraduate Chair, including the name and signature of the supervising faculty member(s). Students must complete a project report and make a project presentation. This course can satisfy the research project requirements for Computing Science honours students.",
  requisite_description: "Students must have completed 90 units, including 15 units of upper division CMPT courses, and have a GPA of at least 3.00. The proposal must be submitted to the Undergraduate Chair at least 15 days in advance of the term. The proposal must be signed by the supervisor(s) and the undergraduate chair.",
  prereq_logic: "", # implement
  short_description: "Students must submit a proposal to the Undergraduate Chair, including the name and signature of the supervising faculty member(s). Students must complete a project report and make a project presentation. This course can satisfy the research project requirements for Computing Science honours students.",
  credits: 6,
  instructors: [ "Nicholas Vincent", "Parsa Rajabi" ],
  campuses: [ nil ],
  delivery_methods: [ "In Person" ],
  sections: [ "d100", "d200", "d300" ],
  requisites: [],
)
